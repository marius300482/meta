<?

/* PH START */

function parseFilter($filter)
{
    // Split the string and assign the parts to $field and $value
    $temp = explode(':', $filter, 2);
    $field = array_shift($temp);
    $value = count($temp) > 0 ? $temp[0] : '';

    // Remove quotes from the value if there are any
    if (substr($value, 0, 1)  == '"') {
        $value = substr($value, 1);
    }
    if (substr($value, -1, 1) == '"') {
        $value = substr($value, 0, -1);
    }
    // One last little clean on whitespace
    $value = trim($value);

    // Send back the results:
    return array($field, $value);
}

function removeSelections($params, $removeSelections)
{
    foreach ($removeSelections as $selection)
    {
        $field = $selection['field'];
        $value = $selection['value'];
        $escape = $selection['escape'];
        $operator = $selection['operator'];

        // Account for operators:
        if ($operator == 'NOT') {
            $field = '-' . $field;
        } else if ($operator == 'OR') {
            $field = '~' . $field;
        }

        // Remove the filters:
        if (isset($params['filter']) && is_array($params['filter'])) {
            foreach ($params['filter'] as $key => $current) {
                list($currentField, $currentValue) = parseFilter($current);
                if (strtolower($currentField) == strtolower($field) && strtolower($currentValue) == strtolower($value)) {
                    unset($params['filter'][$key]);
                }
            }
        }
    }

    // Clear page:
    unset($params['page']);

    return '?' . buildQueryString($params, $escape);
}

function buildQueryString($a, $escape = true)
{
    $parts = array();
    foreach ($a as $key => $value) {
        if (is_array($value)) {
            foreach ($value as $current) {
                $parts[] = urlencode($key . '[]') . '=' . urlencode($current);
            }
        } else {
            $parts[] = urlencode($key) . '=' . urlencode($value);
        }
    }
    $retVal = implode('&', $parts);
    return $escape ? htmlspecialchars($retVal) : $retVal;
}

function getDeleteFacetURl($title, $value, $operator, $filterList, $urlQuery, $results)
{
    if ("typeOfRessource_facet" == $title)
    {
        $removeFacets = array(
            array(
                'field' => $title,
                'value'=> $value,
                'escape'=> true,
                'operator' => $operator
            )
        );

        foreach ($filterList as $key => $filters)
        {
            if ("Format" == $key)
            {
                foreach ($filters as $filter) {
                    $removeFacets[] = array(
                        'field' => $key,
                        'value' => $filter['value'],
                        'escape' => true,
                        'operator' => $filter['operator']
                    );
                }
            }
        }

        return removeSelections($urlQuery, $removeFacets);
    } else {
        return $results->getUrlQuery()->removeFacet($title, $value, true, $operator);
    }
}

//$method = new ReflectionMethod('VuFind\Search\UrlQueryHelper', 'getParamArray');
//$method->setAccessible(true);
//$urlQuery = $method->invoke($results->getUrlQuery());
$urlQuery = $_REQUEST;

/* PH END */

?>


<? $results = $this->recommend->getResults(); ?>
<? if ($results->getResultTotal() > 0): ?>
  <h4><?=$this->transEsc(isset($this->overrideSideFacetCaption) ? $this->overrideSideFacetCaption : 'Narrow Search')?></h4>
<? endif; ?>
<? $checkboxFilters = $results->getParams()->getCheckboxFacets(); if (count($checkboxFilters) > 0): ?>
<?
  $html = '';
  $shown = 0;
  foreach ($checkboxFilters as $current) {
    $html .= '<label class="checkbox';
    if($results->getResultTotal() < 1 && !$current['selected'] && !$current['alwaysVisible']) {
      $html .= ' hidden';
    } else {
      $shown ++;
    }
    $html .= '"><input type="checkbox" name="filter[]" value="'.$this->escapeHtmlAttr($current['filter']).'"
      '. ($current['selected'] ? 'checked="checked"' : '') .' id="'.$this->escapeHtmlAttr(str_replace(' ', '', $current['desc'])).'"
      onclick="document.location.href=\''.($current['selected'] ? $results->getUrlQuery()->removeFilter($current['filter']) : $results->getUrlQuery()->addFilter($current['filter'])).'\';" />'.$this->transEsc($current['desc']).'</label>';
  }
?>
  <div class="checkboxFilter<?if($shown == 0):?> hidden<? endif; ?>"><?=$html ?></div>
<? endif; ?>
<? $extraFilters = isset($this->extraSideFacetFilters) ? $this->extraSideFacetFilters : array(); ?>
<? $collapsedFacets = $this->recommend->getCollapsedFacets() ?>
<? $filterList = array_merge($results->getParams()->getFilterList(true), $extraFilters); if (!empty($filterList)): ?>
<?php /* PHE is not required
  <ul class="list-group filters">
    <li class="list-group-item title"><?=$this->transEsc('Remove Filters')?></li>
    <? foreach ($filterList as $field => $filters): ?>
      <? foreach ($filters as $i => $filter): ?>
        <?
          $index = isset($filter['field']) ? array_search($filter['field'], $collapsedFacets) : false;
          if ($index !== false) {
              unset($collapsedFacets[$index]); // Open if we have a match
          }
          if (isset($filter['specialType']) && $filter['specialType'] == 'keyword') {
            $removeLink = $this->currentPath().$results->getUrlQuery()->replaceTerm($filter['value'], '');
          } else {
            $removeLink = $this->currentPath().$results->getUrlQuery()->removeFacet($filter['field'], $filter['value'], true, $filter['operator']);
          }
          if ($filter['displayText'] == '[* TO *]') {
            $filter['displayText'] = $this->translate('filter_wildcard');
          }
        ?>
        <a class="list-group-item active" href="<?=$removeLink?>">
          <span class="pull-right"><i class="fa fa-times"></i></span>
          <? if ($filter['operator'] == 'NOT') echo $this->transEsc('NOT') . ' '; if ($filter['operator'] == 'OR' && $i > 0) echo $this->transEsc('OR') . ' '; ?><?=$this->transEsc($field)?>: <?=$this->escapeHtml($filter['displayText'])?></a>
        </a>
      <? endforeach; ?>
    <? endforeach; ?>
  </ul>
*/ ?>
<? endif; ?>
<?= isset($this->sideFacetExtraControls) ? $this->sideFacetExtraControls : '' ?>
<? $sideFacetSet = $this->recommend->getFacetSet(); $rangeFacets = $this->recommend->getAllRangeFacets(); ?>
<? if (!empty($sideFacetSet) && $results->getResultTotal() > 0): ?>
  <? foreach ($sideFacetSet as $title => $cluster): ?>
    <?php /* PHE START: Hide format facet until a type in the type facet was selected */ ?>
    <?php if (isset($sideFacetSet['typeOfRessource_facet']) && !isset($filterList["Material zum ..."]) && "format" === $title) continue; ?>
    <?php /* PHE END: Hide format facet until a type in the type facet was selected */ ?>
    <? $allowExclude = $this->recommend->excludeAllowed($title); ?>
    <? $translateFacet = $this->facetEntryTranslation($cluster['label']);?>
    <ul class="list-group" id="side-panel-<?=$this->escapeHtmlAttr($title) ?>">
      <li class="list-group-item title<? if(in_array($title, $collapsedFacets)): ?> collapsed<? endif ?>" data-toggle="collapse" href="#side-collapse-<?=$this->escapeHtmlAttr($title) ?>">
        <?=$this->transEsc($cluster['label'])?>
      </li>
      <div id="side-collapse-<?=$this->escapeHtmlAttr($title) ?>" class="collapse<? if(!in_array($title, $collapsedFacets)): ?> in<? endif ?>">
        <? if (isset($rangeFacets[$title])): ?>
          <li class="list-group-item">
            <form action="" name="<?=$this->escapeHtmlAttr($title)?>Filter" id="<?=$this->escapeHtmlAttr($title)?>Filter">
              <?=$results->getUrlQuery()->asHiddenFields(array('page' => "/./", 'filter' => "/^{$title}:.*/"))?>
              <input type="hidden" name="<?=$this->escapeHtmlAttr($rangeFacets[$title]['type'])?>range[]" value="<?=$this->escapeHtmlAttr($title)?>"/>
              <div class="row">
                <? $extraInputAttribs = ($rangeFacets[$title]['type'] == 'date') ? 'maxlength="4" ' : ''; ?>
                <div class="col-sm-6">
                  <label for="<?=$this->escapeHtmlAttr($title)?>from">
                    <?=$this->transEsc('date_from')?>:
                  </label>
                  <input type="text" class="form-control" name="<?=$this->escapeHtmlAttr($title)?>from" id="<?=$this->escapeHtmlAttr($title)?>from" value="<?=isset($rangeFacets[$title]['values'][0])?$this->escapeHtmlAttr($rangeFacets[$title]['values'][0]):''?>" <?=$extraInputAttribs?>/>
                </div>
                <div class="col-sm-6">
                  <label for="<?=$this->escapeHtmlAttr($title)?>to">
                    <?=$this->transEsc('date_to')?>:
                  </label>
                  <input type="text" class="form-control" name="<?=$this->escapeHtmlAttr($title)?>to" id="<?=$this->escapeHtmlAttr($title)?>to" value="<?=isset($rangeFacets[$title]['values'][1])?$this->escapeHtmlAttr($rangeFacets[$title]['values'][1]):''?>" <?=$extraInputAttribs?>/>
                </div>
              </div>
              <? if ($rangeFacets[$title]['type'] == 'date'): ?>
                <div class="slider-container"><input type="text" class="hidden" id="<?=$this->escapeHtmlAttr($title)?><?=$this->escapeHtml($rangeFacets[$title]['type'])?>Slider"/></div>
              <? endif; ?>
              <input class="btn btn-default" type="submit" value="<?=$this->transEsc('Set')?>"/>
            </form>
          </li>
          <? if ($rangeFacets[$title]['type'] == 'date'): ?>
            <? $this->headScript()->appendFile('vendor/bootstrap-slider.js'); ?>
            <?
              $min = !empty($rangeFacets[$title][0]) ? min($rangeFacets[$title][0], 1400) : 1400;
              $future = date('Y', time()+31536000);
              $max = !empty($rangeFacets[$title][1]) ? max($future, $rangeFacets[$title][1]) : $future;
              $low  = !empty($rangeFacets[$title][0]) ? $rangeFacets[$title][0] : $min;
              $high = !empty($rangeFacets[$title][1]) ? $rangeFacets[$title][1] : $max;
              $script = <<<JS
$(document).ready(function() {
  var fillTexts = function() {
  var v = {$this->escapeHtmlAttr($title)}dateSlider.getValue();
  $('#{$this->escapeHtmlAttr($title)}from').val(v[0]);
  $('#{$this->escapeHtmlAttr($title)}to').val(v[1]);
  };
  var {$this->escapeHtmlAttr($title)}dateSlider = $('#{$this->escapeHtmlAttr($title)}dateSlider')
  .slider({
     'min':{$min},
     'max':{$max},
     'handle':"square",
     'tooltip':"hide",
     'value':[{$low},{$high}]
  })
  .on('slide', fillTexts)
  .data('slider');
});
JS;
            ?>
            <?=$this->inlineScript(\Zend\View\Helper\HeadScript::SCRIPT, $script, 'SET'); ?>
          <? endif; ?>
        <? else: ?>
          <? foreach ($cluster['list'] as $i=>$thisFacet): ?>
            <?
              if(strlen($thisFacet['displayText']) == 0) {
                $thisFacet['displayText'] = "-";
              }
            ?>
            <? $moreClass = 'narrowGroupHidden-'.$this->escapeHtmlAttr($title).' hidden'; ?>
          <? if ($i == 6): ?>
            <a id="more-narrowGroupHidden-<?=$this->escapeHtmlAttr($title)?>" class="list-group-item" href="javascript:moreFacets('narrowGroupHidden-<?=$title ?>')"><?=$this->transEsc('more')?> ...</a>
          <? endif; ?>
          <? if ($thisFacet['isApplied']): ?>
            <a class="list-group-item active <? if ($i>5): ?><?=$moreClass ?><?endif ?><? if ($thisFacet['operator'] == 'OR'): ?> facetOR applied<? endif ?>" href="<?=$this->currentPath().getDeleteFacetURl($title, $thisFacet['value'], $thisFacet['operator'], $filterList, $urlQuery, $results) ?>">
              <? if($thisFacet['operator'] == 'OR'): ?>
                <i class="fa fa-check-square-o"></i>
              <? else: ?>
                <span class="pull-right"><i class="fa fa-times"></i></span>
              <? endif; ?>
              <?php if ($translateFacet) : ?>
                  <?=$this->escapeHtml($this->translate($thisFacet['displayText']))?>
              <? else : ?>
                  <?=$this->escapeHtml($thisFacet['displayText'])?>
              <?php endif; ?>
              <span class="badge">
              (<?=number_format($thisFacet['count'], 0, ',', '.')?>)
            </span>
            </a>
          <? else: ?>
            <? $addURL = $this->currentPath().$results->getUrlQuery()->addFacet($title, $thisFacet['value'], $thisFacet['operator']); ?>
            <? if ($allowExclude): ?>
              <li class="list-group-item facet<?=$thisFacet['operator'] ?><? if ($i>5): ?> <?=$moreClass ?><?endif ?>">
            <? else: ?>
              <a href="<?=$addURL ?>" class="list-group-item facet<?=$thisFacet['operator'] ?><? if ($i>5): ?> <?=$moreClass ?><?endif ?>">
            <? endif; ?>

            <? if ($allowExclude): ?>
              <a href="<?=$addURL ?>">
            <? endif; ?>
            <? if($thisFacet['operator'] == 'OR'): ?>
              <i class="fa fa-square-o"></i>
            <? endif; ?>
            <?php if ($translateFacet) : ?>
                <?=$this->escapeHtml($this->translate($thisFacet['displayText']))?>
            <? else : ?>
                <?=$this->escapeHtml($thisFacet['displayText'])?>
            <?php endif; ?>
            <span class="badge">
              (<?=number_format($thisFacet['count'], 0, ',', '.')?>)
              <? if ($allowExclude): ?>
                <a href="<?=$this->currentPath().$results->getUrlQuery()->addFacet($title, $thisFacet['value'], 'NOT') ?>" title="<?=$this->transEsc('exclude_facet') ?>"><i class="fa fa-times"></i></a>
              <? endif; ?>
            </span>
            <? if ($allowExclude): ?>
                </a>
              </li>
            <? else: ?>
              </a>
            <? endif; ?>

          <? endif; ?>
        <? endforeach; ?>
          <? if ($i > 5): ?><a class="list-group-item <?=$moreClass ?>" href="javascript:lessFacets('narrowGroupHidden-<?=$title ?>')"><?=$this->transEsc('less')?> ...</a><? endif; ?>
        <? endif; ?>
      </div>
    </ul>
  <? endforeach; ?>
<? endif; ?>